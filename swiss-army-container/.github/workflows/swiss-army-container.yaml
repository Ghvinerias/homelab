name: Build Multi-Arch Docker Image

on:
  # Manual trigger
  workflow_dispatch:
  
  # Weekly check for updates (every Monday at 6 AM UTC)
  schedule:
    - cron: '0 6 * * 1'
  
  # Trigger on pushes to main branch
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.github/workflows/build-multiarch.yml'

env:
  REGISTRY: docker.io

jobs:
  check-versions:
    runs-on: ubuntu-latest
    outputs:
      bws-version: ${{ steps.versions.outputs.bws-version }}
      kubectl-version: ${{ steps.versions.outputs.kubectl-version }}
      wireguard-version: ${{ steps.versions.outputs.wireguard-version }}
      should-build: ${{ steps.check.outputs.should-build }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get latest versions
        id: versions
        run: |
          # Get BWS latest version
          BWS_VERSION=$(curl -sL https://api.github.com/repos/bitwarden/sdk/releases | jq -r '.[] | select(.tag_name | startswith("bws-v")) | .tag_name' | head -1)
          echo "bws-version=$BWS_VERSION" >> $GITHUB_OUTPUT
          
          # Get kubectl latest version
          KUBECTL_VERSION=$(curl -sL https://dl.k8s.io/release/stable.txt)
          echo "kubectl-version=$KUBECTL_VERSION" >> $GITHUB_OUTPUT
          
          # Get WireGuard container latest version
          WIREGUARD_VERSION=$(curl -sL https://api.github.com/repos/linuxserver/docker-wireguard/releases/latest | jq -r '.tag_name')
          echo "wireguard-version=$WIREGUARD_VERSION" >> $GITHUB_OUTPUT

      - name: Check if versions changed
        id: check
        run: |
          # Create versions file if it doesn't exist
          if [ ! -f .versions ]; then
            echo "bws=none" > .versions
            echo "kubectl=none" >> .versions
            echo "wireguard=none" >> .versions
          fi
          
          # Read current versions
          CURRENT_BWS=$(grep "bws=" .versions | cut -d'=' -f2)
          CURRENT_KUBECTL=$(grep "kubectl=" .versions | cut -d'=' -f2)
          CURRENT_WIREGUARD=$(grep "wireguard=" .versions | cut -d'=' -f2)
          
          # Compare versions
          if [ "$CURRENT_BWS" != "${{ steps.versions.outputs.bws-version }}" ] || \
             [ "$CURRENT_KUBECTL" != "${{ steps.versions.outputs.kubectl-version }}" ] || \
             [ "$CURRENT_WIREGUARD" != "${{ steps.versions.outputs.wireguard-version }}" ] || \
             [ "${{ github.event_name }}" = "workflow_dispatch" ] || \
             [ "${{ github.event_name }}" = "push" ]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
            echo "Version changes detected or manual trigger"
          else
            echo "should-build=false" >> $GITHUB_OUTPUT
            echo "No version changes detected"
          fi

  build-and-push:
    needs: check-versions
    if: needs.check-versions.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get secrets from Bitwarden
        uses: bitwarden/sm-action@v2
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          secrets: |
            ${{ secrets.DOCKERHUB_USERNAME_SECRET_ID }}
            ${{ secrets.DOCKERHUB_TOKEN_SECRET_ID }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env[secrets.DOCKERHUB_USERNAME_SECRET_ID] }}
          password: ${{ env[secrets.DOCKERHUB_TOKEN_SECRET_ID] }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghvinerias/swiss-army-container
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYY-MM-DD'}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            WIREGUARD_VERSION=${{ needs.check-versions.outputs.wireguard-version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update versions file
        run: |
          echo "bws=${{ needs.check-versions.outputs.bws-version }}" > .versions
          echo "kubectl=${{ needs.check-versions.outputs.kubectl-version }}" >> .versions
          echo "wireguard=${{ needs.check-versions.outputs.wireguard-version }}" >> .versions

      - name: Commit version updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .versions
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update dependency versions [skip ci]"
            git push
          fi

      - name: Create release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            ## Dependency Versions
            - BWS: ${{ needs.check-versions.outputs.bws-version }}
            - Kubectl: ${{ needs.check-versions.outputs.kubectl-version }}  
            - WireGuard: ${{ needs.check-versions.outputs.wireguard-version }}
            
            Built for: linux/amd64, linux/arm64
          draft: false
          prerelease: false